{
  "contact_summary": "",
  "tasks": {
    "rules": "define Target {_id: null,deleted: null,type: null,pass: null,date: null}define Contact {contact: null,reports: null}define Task {_id: null,deleted: null,doc: null,contact: null,icon: null,date: null,title: null,fields: null,resolved: null,priority: null,priorityLabel: null,reports: null,actions: null}rule GenerateEvents {when {c: Contact}then {var idx1,idx2,r,target,now=Utils.now(),targets=[{id:'active-pregnancies',appliesTo:'reports',date:'now',appliesIf:function(e,t){return'D'===t.form}},{id:'imm-children-registered-this-month',appliesTo:'contacts',date:function(e){return e.contact.reported_date},appliesToType:['person'],appliesIf:function(e){return e.age_in_months<=60}}],tasks=[];for(idx1=0;idx1<targets.length;++idx1)switch((target=targets[idx1]).appliesTo){case'contacts':c.contact&&-1!==target.appliesToType.indexOf(c.contact.type)&&emitContactBasedTargetFor(c,target);break;case'reports':for(idx2=0;idx2<c.reports.length;++idx2)r=c.reports[idx2],emitReportBasedTargetFor(c,r,target);break;default:throw new Error('unrecognised target type: '+target.appliesTo)}if(tasks)for(idx1=0;idx1<tasks.length;++idx1){var task=tasks[idx1];switch(task.appliesTo){case'reports':case'scheduled_tasks':for(idx2=0;idx2<c.reports.length;++idx2)r=c.reports[idx2],emitTasksForSchedule(c,task,r);break;case'contacts':c.contact&&-1!==task.appliesToType.indexOf(c.contact.type)&&emitTasksForSchedule(c,task);break;default:throw new Error('unrecognised task type: '+task.appliesTo)}}function emitTasksForSchedule(d,o,n){var e;if((!n||!o.appliesToType||-1!==o.appliesToType.indexOf(n.form))&&('scheduled_tasks'===o.appliesTo||!o.appliesIf||o.appliesIf(d,n)))if('scheduled_tasks'===o.appliesTo){if(n&&o.appliesIf){if(!n.scheduled_tasks)return;for(e=0;e<n.scheduled_tasks.length;e++)o.appliesIf(d,n,e)&&t(e)}}else t();function t(e){var t,a,s,i,r=null;for(t=0;t<o.events.length;t++)a=o.events[t],r=n?a.dueDate?a.dueDate(n,a,e):void 0!==e?new Date(Utils.addDate(new Date(n.scheduled_tasks[e].due),a.days)):new Date(Utils.addDate(new Date(n.reported_date),a.days)):a.dueDate?a.dueDate(d.contact,a):new Date(Utils.addDate(new Date(d.contact.reported_date),a.days)),Utils.isTimely(r,a)&&(i={_id:n?n._id+'-'+a.id:d.contact._id+'-'+o.id,deleted:!(!(d.contact&&d.contact.deleted||n)||!n.deleted),doc:d,contact:d.contact,icon:o.icon,date:r,title:o.title,resolved:!!n&&o.resolvedIf(d,n,a,r,e),actions:n?o.actions.map(c):[]},void 0!==e&&(i._id+='-'+e),'function'==typeof(s=o.priority)&&(s=s(d,n)),s&&(i.priority=s.level,i.priorityLabel=s.label),emit('task',new Task(i)))}function c(e){return{type:'report',form:e.form,label:e.label||'Follow up',content:{source:'task',source_id:n._id,contact:d.contact}}}}function emitContactBasedTargetFor(e,t){if(!t.appliesIf||t.appliesIf(e)){var a=!t.passesIf||!!t.passesIf(e),s=createTargetInstance(t.id,e.contact,a);if('function'==typeof t.date)s.date=t.date(e);else if(void 0===t.date||'now'===t.date)s.date=now.getTime();else{if('reported'!==t.date)throw new Error('Unrecognised value for instance.date: '+t.date);s.date=e.reported_date}emitTargetInstance(s)}}function emitReportBasedTargetFor(e,t,a){var s,i;if(!a.appliesIf||a.appliesIf(e,t))if(a.emitCustom)a.emitCustom(e,t);else switch(i=!a.passesIf||!!a.passesIf(e,t),(s=createTargetInstance(a.id,t,i))._id=('report'===a.idType?t._id:e.contact._id)+'-'+a.id,emitTargetInstance(s),a.date){case'now':s.date=now.getTime()}}function createTargetInstance(e,t,a){return new Target({_id:t._id+'-'+e,deleted:!!t.deleted,type:e,pass:a,date:t.reported_date})}function emitTargetInstance(e){emit('target',e)}emit('_complete',{_id:!0});}}",
    "schedules": {
      "test": true
    },
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "active-pregnancies",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.active_pregnancies.title",
          "subtitle_translation_key": "targets.all_time.subtitle",
          "icon": "pregnancy-1"
        },
        {
          "id": "imm-children-registered-this-month",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.children_registered.title",
          "subtitle_translation_key": "targets.this_month.subtitle",
          "icon": "child",
          "context": "user.parent.use_cases.split(' ').indexOf('imm') !== -1"
        }
      ]
    }
  }
}
