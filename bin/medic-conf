#!/usr/bin/env node

const usage = require('../src/cli/usage');
const supportedActions = require('../src/cli/supported-actions');

const args = process.argv.slice(2);
if(args.length < 2) {
    usage();
    process.exit(1);
}

const project = args[0];
const instanceUrl = args[1];
const couchUrl = `${instanceUrl}/medic`;

if(args.length === 2) {
  return require('../src/cli/all.js')(project, couchUrl);
}

const actions = args.slice(2);

if(!actions.every(a => supportedActions.includes(a))) {
  error(`Unsupported action: ${a}`);
  usage();
  process.exit(1);
}

const error = require('../src/lib/log').error;
const info = require('../src/lib/log').info;

return actions.reduce((promiseChain, action) =>
    promiseChain
      .then(() => info('Starting action:', action, '...'))
      .then(() => require(`../src/fn/${action}`)(project, couchUrl))
      .then(() => info(action, 'complete')),
    Promise.resolve())
  .catch(e => {
    error(e);
    process.exit(1);
  });
